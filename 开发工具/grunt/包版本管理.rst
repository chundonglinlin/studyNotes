*****
包版本管理
*****

打开根目录下的 ``package.json`` 或者 ``bower.json`` 我们会在 ``dependencies`` 中找到各个依赖包的名字和版本号定义，一般情况下这个版本号大致有以下3种套路：

.. code-block:: js

	"dependencies": {
	    "angular":"^1.4.10"
	}

	"dependencies": {
	    "angular":"~1.4.10"
	}

	"dependencies": {
	    "angular":"1.4.10"
	}

说到这里就要提一下版本号的一种定义规则叫做 `Semantic Versioning <http://semver.org/>`_

.. code-block:: shell

	版本格式：主版本号.次版本号.修订号，版本号递增规则如下：

	主版本号：当你做了不兼容的 API 修改，
	次版本号：当你做了向下兼容的功能性新增，
	修订号：当你做了向下兼容的问题修正。
	先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。

而 ``^`` 和 ``～`` 的作用就是用来控制 ``install`` 时候选择版本的策略：

- ``"angular":"^1.4.10"`` 意味着，本次安装会选择 ``GitHub`` 上 ``angular 1.x.x`` 版本中最高的版本，即使 ``angular`` 的最新版本是 ``2.x.x`` ，不会去升级主版本号，但是会挑选此版本号中最高的装；
- ``"angular":"~1.4.10"`` 意味着， 本次安装会选择 ``GitHub`` 上 ``angular 1.4.x`` 版本中最高的版本，比如 ``1.4.20`` 不会去升级主版本号和次版本号；
- ``"angular":"1.4.10"`` 就是写死了，每次都是固定版本。

由于 ``package.json/bower.json`` 很多地方都是用了 ``^`` 策略，所以当次版本号改变时，往往是比较大的更新，很有可能会引发冲突。