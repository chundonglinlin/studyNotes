**
前言
**

这本书适合谁
============
本书面向有兴趣使用 ``JavaScript`` 创建 ``Web`` 和移动应用程序的人员。 由于本书使用了现代 ``JavaScript`` 概念，所以以前使用 ``HTML5/ES2015`` 的经验将会很有帮助。 您可能希望利用这些知识在您的个人项目或工作角色中创建交互式的基于 ``Web`` 的体验。

这本书包括什么
==============
第1章， ``Vue.js`` 原理和比较，向读者介绍 ``Vue.js`` ，并激励他们将其用作创建 ``Web`` 应用程序的框架。读者将了解 ``Vue.js`` 与其他流行框架（如 ``React`` 和 ``Angular`` ）之间的差异。

第2章，正确创建 ``Vue`` 项目，着眼于创建 ``Vue`` 项目的适当方式。这包括使用 ``Webpack`` ， ``Babel/TypeScript`` （用于ES6）， ``.vue`` 文件， ``linting`` 等等。

第3章，使用 ``Vue`` 编写清洁和精炼代码，深入了解 ``Vue.js`` 实例和不同的保留属性，如 ``data`` ， ``computed`` 和 ``watch`` ，以及创建 ``getter`` 和 ``setter`` 。本章特别考虑何时使用计算属性以及何时使用监视属性。它还概述了为什么模板应该保持特别精简以便于维护。

第4章， ``Vue.js`` 指令介绍了这样一个事实，即在编写反应性 ``Vue`` 应用程序时，开发人员可以访问一组强大的指令，例如 ``v-for`` ， ``v-if`` ， ``v-model`` 和其他指令。本章详细介绍每条指令以及最佳实践和模式。此外，读者可以使用简写语法来进行事件绑定。

第5章，与 ``Vue.js`` 组件进行安全通信，对 ``Vue`` 组件进行更高级的研究，查看组件通信。我们将看看传递属性，以及验证 ``prop`` 类型并考虑不同类型的属性和数据流。

第6章，创建更好的 ``UI`` ，重点介绍 ``Vue`` 的常见 ``UI`` 模式。再看看如何使用 ``v-mode`` 来获得用户的输入，以及如何绑定输入，如文本，复选框，单选按钮等。它还着眼于下拉和动态输入。最后，本章将介绍表单提交和各种修饰符，例如延迟绑定，数字类型转换和字符串修整。

第7章， ``HTTP`` 和 ``WebSocket`` 通信介绍了将 ``HTTP`` 集成到 ``Vue.js`` 应用程序中的最佳实践。它包含 ``Axios`` 和各种发送 ``HTTP`` 请求的方法（即instance/component/ nav guards）。本章还将介绍如何使用 ``socket.io`` ，以及创建用于实时集成的基本 ``Node/Express API`` 。

第8章， ``Vue`` 路由器模式描述了路由如何成为 ``SPA`` 非常重要的一部分。本章重点介绍 ``Vue`` 路由并着眼于在多个页面之间路由用户。它贯穿了从匹配路径和组件到使用导航参数，正则表达式等进行动态匹配的所有内容。

第9章，使用 ``Vuex`` 进行状态管理，用 ``Vuex`` 演示了状态管理。它从查看 ``Flux`` 体系结构和单向数据流开始。然后，看看 ``Vue`` 的状态管理系统 ``Vuex`` 。本章还着眼于在应用程序中实现这一点，以及常见的陷阱和使用模式。然后是 ``Vue-devtools`` 来捕获动作和 ``Vue`` 实例数据。

第10章，测试 ``Vue.js`` 应用程序表明，无论框架或语言如何，测试都是任何项目的重要组成部分。本章着眼于测试我们的应用程序以及如何编写可测试的代码。然后我们将看看用 ``Jasmine`` 和 ``Karma`` 测试我们的应用程序，以及在测试突变(mutations)时测试我们的 ``Vuex`` 代码。

第11章，优化概述了部署 ``Vue`` 应用程序和任何潜在的性能优化。然后它会将应用程序转换为渐进式 ``Web`` 应用程序（PWA）并添加 ``ServiceWorkers`` ，脱机支持等。它还考察了整体捆绑规模可以减少的方式，以及 ``SVG`` 赢得的性能。

第12章，使用 ``Nuxt``进行服务器端渲染，展示使用 ``Nuxt`` 创建服务器端渲染的 ``Vue`` 应用程序。该项目将通过使用 ``Vue CLI`` 创建，我们将会看到从配置到路由，中间件和测试 ``Nuxt`` ，一直到部署的一切。

第13章，在编写 ``Vue.js`` 应用程序时模式帮助读者使用通用的反模式并允许他们避免使用这些原则。提出了一个样式指南，以及使用 ``$parent`` ， ``$ref`` 耦合问题，内联表达式和其他关键问题。

如何充分利用这本书
==================

1. 您应该已经对 ``JavaScript(ES2015 +)`` 以及 ``HTML5`` 和 ``CSS3`` 有了解。
2. 本书不需要 ``Vue.js`` 的经验，但是其他 ``JavaScript`` 框架的经验有助于比较和类比的作用。

下载样例代码
------------
本书的代码包也位于GitHub上 https://github.com/PacktPublishing/Vue.js-2-Design-Patterns-and-Best-Practices 。

下载彩色图片
------------
我们还提供一个PDF文件，其中包含本书中使用的截图/图表的彩色图像。 你可以在这里下载： https://www.packtpub.com/sites/default/files/downloads/Vuejs2DesignPatternsandBestPractices_ColorImages.pdf
