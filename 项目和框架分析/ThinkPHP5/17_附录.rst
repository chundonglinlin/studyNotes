****
附录
****

配置参考
========
惯例配置
--------
应用设置
^^^^^^^^
.. code-block:: php

    // 应用调试模式
    'app_debug'              => true,
    // 应用模式状态
    'app_status'             => '',
    // 应用Trace
    'app_trace'              => false,
    // 是否支持多模块
    'app_multi_module'       => true,
    // 注册的根命名空间
    'root_namespace'         => [],
    // 扩展配置文件 （V5.0.1 已经废弃）
    'extra_config_list'      => ['database', 'route', 'validate'],
    // 扩展函数文件
    'extra_file_list'        => [THINK_PATH . 'helper' . EXT],
    // 默认输出类型
    'default_return_type'    => 'html',
    // 默认AJAX 数据返回格式,可选json xml ...
    'default_ajax_return'    => 'json',
    // 默认JSONP格式返回的处理方法
    'default_jsonp_handler'  => 'jsonpReturn',
    // 默认JSONP处理方法
    'var_jsonp_handler'      => 'callback',
    // 默认时区
    'default_timezone'       => 'PRC',
    // 是否开启多语言
    'lang_switch_on'         => false,
    // 默认全局过滤方法 用逗号分隔多个
    'default_filter'         => '',
    // 默认语言
    'default_lang'           => 'zh-cn',
    // 应用类库后缀
    'class_suffix'           => false,
    // 控制器类后缀
    'controller_suffix'      => false,

模块设置
^^^^^^^^

.. code-block:: php

    // 默认模块名
    'default_module'         => 'index',
    // 禁止访问模块
    'deny_module_list'       => ['common'],
    // 默认控制器名
    'default_controller'     => 'Index',
    // 默认操作名
    'default_action'         => 'index',
    // 默认验证器
    'default_validate'       => '',
    // 默认的空控制器名
    'empty_controller'       => 'Error',
    // 操作方法后缀
    'action_suffix'          => '',
    // 自动搜索控制器
    'controller_auto_search' => false,

URL设置
^^^^^^^

.. code-block:: php

    // PATHINFO变量名 用于兼容模式
    'var_pathinfo'           => 's',
    // 兼容PATH_INFO获取
    'pathinfo_fetch'         => ['ORIG_PATH_INFO', 'REDIRECT_PATH_INFO', 'REDIRECT_URL'],
    // pathinfo分隔符
    'pathinfo_depr'          => '/',
    // URL伪静态后缀
    'url_html_suffix'        => 'html',
    // URL普通方式参数 用于自动生成
    'url_common_param'       => false,
    // URL参数方式 0 按名称成对解析 1 按顺序解析
    'url_param_type'         => 0,
    // 是否开启路由
    'url_route_on'           => true,
    // 是否强制使用路由
    'url_route_must'         => false,
    // 域名部署
    'url_domain_deploy'      => false,
    // 域名根，如thinkphp.cn
    'url_domain_root'        => '',
    // 是否自动转换URL中的控制器和操作名
    'url_convert'            => true,
    // 默认的访问控制器层
    'url_controller_layer'   => 'controller',
    // 表单请求类型伪装变量
    'var_method'             => '_method',
    // 表单ajax伪装变量 V5.0.2+
    'var_ajax'               => '_ajax',
    // 表单pjax伪装变量 V5.0.2+
    'var_pjax'               => '_pjax',
    // 是否开启请求缓存 true自动缓存 支持设置请求缓存规则 V5.0.3+
    'request_cache'          => false,
    // 请求缓存有效期 V5.0.3+
    'request_cache_expire'   => null,

模板引擎设置
^^^^^^^^^^^^

.. code-block:: php

    'template'               => [
        // 模板引擎类型 支持 php think 支持扩展
        'type'         => 'Think',
        // 模板路径
        'view_path'    => '',
        // 模板后缀
        'view_suffix'  => 'html',
        // 模板文件名分隔符
        'view_depr'    => DS,
        // 模板引擎普通标签开始标记
        'tpl_begin'    => '{',
        // 模板引擎普通标签结束标记
        'tpl_end'      => '}',
        // 标签库标签开始标记
        'taglib_begin' => '{',
        // 标签库标签结束标记
        'taglib_end'   => '}',
    ],

    // 视图输出字符串内容替换
    'view_replace_str'       => [],
    // 默认跳转页面对应的模板文件
    'dispatch_success_tmpl'  => THINK_PATH . 'tpl' . DS . 'dispatch_jump.tpl',
    'dispatch_error_tmpl'    => THINK_PATH . 'tpl' . DS . 'dispatch_jump.tpl',

异常及错误设置
^^^^^^^^^^^^^^

.. code-block:: php

    // 异常页面的模板文件
    'exception_tmpl'         => THINK_PATH . 'tpl' . DS . 'think_exception.tpl',

    // 错误显示信息,非调试模式有效
    'error_message'          => '页面错误！请稍后再试～',
    // 显示错误信息
    'show_error_msg'         => false,

日志设置
^^^^^^^^

.. code-block:: php

    'log'                    => [
        // 日志记录方式，支持 file socket
        'type' => 'File',
        // 日志保存目录
        'path' => LOG_PATH,
    ],

Trace设置
^^^^^^^^^

.. code-block:: php

    'trace'                  => [
        // 内置Html Console 支持扩展
        'type' => 'Html',
    ],

缓存设置
^^^^^^^^

.. code-block:: php

    'cache'                  => [
        // 驱动方式
        'type'   => 'File',
        // 缓存保存目录
        'path'   => CACHE_PATH,
        // 缓存前缀
        'prefix' => '',
        // 缓存有效期 0表示永久缓存
        'expire' => 0,
    ],

会话设置
^^^^^^^^

.. code-block:: php

    'session'                => [
        'id'             => '',
        // SESSION_ID的提交变量,解决flash上传跨域
        'var_session_id' => '',
        // SESSION 前缀
        'prefix'         => 'think',
        // 驱动方式 支持redis memcache memcached
        'type'           => '',
        // 是否自动开启 SESSION
        'auto_start'     => true,
    ],

Cookie设置
^^^^^^^^^^

.. code-block:: php

    'cookie'                 => [
        // cookie 名称前缀
        'prefix'    => '',
        // cookie 保存时间
        'expire'    => 0,
        // cookie 保存路径
        'path'      => '/',
        // cookie 有效域名
        'domain'    => '',
        //  cookie 启用安全传输
        'secure'    => false,
        // httponly设置
        'httponly'  => '',
        // 是否使用 setcookie
        'setcookie' => true,
    ],

数据库设置
^^^^^^^^^^

.. code-block:: php

    'database'               => [
        // 数据库类型
        'type'           => 'mysql',
        // 数据库连接DSN配置
        'dsn'            => '',
        // 服务器地址
        'hostname'       => 'localhost',
        // 数据库名
        'database'       => '',
        // 数据库用户名
        'username'       => 'root',
        // 数据库密码
        'password'       => '',
        // 数据库连接端口
        'hostport'       => '',
        // 数据库连接参数
        'params'         => [],
        // 数据库编码默认采用utf8
        'charset'        => 'utf8',
        // 数据库表前缀
        'prefix'         => '',
        // 数据库调试模式
        'debug'          => false,
        // 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)
        'deploy'         => 0,
        // 数据库读写是否分离 主从式有效
        'rw_separate'    => false,
        // 读写分离后 主服务器数量
        'master_num'     => 1,
        // 指定从服务器序号
        'slave_no'       => '',
        // 是否严格检查字段是否存在
        'fields_strict'  => true,
        // 数据集返回类型
        'resultset_type' => 'array',
        // 自动写入时间戳字段
        'auto_timestamp' => false,
        // 是否需要进行SQL性能分析
        'sql_explain'    => false,
    ],

分页配置
^^^^^^^^^

.. code-block:: php

    'paginate'               => [
        'type'      => 'bootstrap',
        'var_page'  => 'page',
        'list_rows' => 15,
    ],

常量参考
========
预定义常量
----------
预定义常量是指系统内置定义好的常量，不会随着环境的变化而变化，包括：

.. code-block:: php

    EXT           类库文件后缀（.php）
    THINK_VERSION 框架版本号

路径常量
--------
系统和应用的路径常量用于系统默认的目录规范，可以通过重新定义改变，如果不希望定制目录，这些常量一般不需要更改。

.. code-block:: php

    DS 当前系统的目录分隔符
    THINK_PATH 框架系统目录
    ROOT_PATH 框架应用根目录
    APP_PATH 应用目录（默认为application）
    CONF_PATH 配置目录（默认为APP_PATH）
    LIB_PATH 系统类库目录（默认为 THINK_PATH.'library/'）
    CORE_PATH 系统核心类库目录 （默认为 LIB_PATH.'think/'）
    TRAIT_PATH 系统trait目录（默认为 LIB_PATH.'traits/'）
    EXTEND_PATH 扩展类库目录（默认为 ROOT_PATH . 'extend/')
    VENDOR_PATH 第三方类库目录（默认为 ROOT_PATH . 'vendor/'）
    RUNTIME_PATH 应用运行时目录（默认为 ROOT_PATH.'runtime/'）
    LOG_PATH 应用日志目录 （默认为 RUNTIME_PATH.'log/'）
    CACHE_PATH 项目模板缓存目录（默认为 RUNTIME_PATH.'cache/'）
    TEMP_PATH 应用缓存目录（默认为 RUNTIME_PATH.'temp/'）

系统常量
--------
系统常量会随着开发环境的改变或者设置的改变而产生变化。

.. code-block:: php

    IS_WIN 是否属于Windows 环境
    IS_CLI 是否属于命令行模式
    THINK_START_TIME 开始运行时间（时间戳）
    THINK_START_MEM 开始运行时候的内存占用
    ENV_PREFIX 环境变量配置前缀

助手函数
========
系统为一些常用的操作方法封装了助手函数，便于使用，包含如下：

+------------+-----------------------------------+
| 助手函数   | 描述                              |
+============+===================================+
| abort      | 中断执行并发送HTTP状态码          |
+------------+-----------------------------------+
| action     | 调用控制器类的操作                |
+------------+-----------------------------------+
| cache      | 缓存管理                          |
+------------+-----------------------------------+
| config     | 获取和设置配置参数                |
+------------+-----------------------------------+
| controller | 实例化控制器                      |
+------------+-----------------------------------+
| cookie     | Cookie管理                        |
+------------+-----------------------------------+
| db         | 实例化数据库类                    |
+------------+-----------------------------------+
| debug      | 调试时间和内存占用                |
+------------+-----------------------------------+
| dump       | 浏览器友好的变量输出              |
+------------+-----------------------------------+
| exception  | 抛出异常处理                      |
+------------+-----------------------------------+
| halt       | 变量调试输出并中断执行            |
+------------+-----------------------------------+
| import     | 导入所需的类库                    |
+------------+-----------------------------------+
| input      | 获取输入数据 支持默认值和过滤     |
+------------+-----------------------------------+
| json       | JSON数据输出                      |
+------------+-----------------------------------+
| jsonp      | JSONP数据输出                     |
+------------+-----------------------------------+
| lang       | 获取语言变量值                    |
+------------+-----------------------------------+
| load_trait | 快速导入Traits PHP5.5以上无需调用 |
+------------+-----------------------------------+
| model      | 实例化Model                       |
+------------+-----------------------------------+
| redirect   | 重定向输出                        |
+------------+-----------------------------------+
| request    | 实例化Request对象                 |
+------------+-----------------------------------+
| response   | 实例化Response对象                |
+------------+-----------------------------------+
| session    | Session管理                       |
+------------+-----------------------------------+
| trace      | 记录日志信息                      |
+------------+-----------------------------------+
| token      | 生成表单令牌输出                  |
+------------+-----------------------------------+
| url        | Url生成                           |
+------------+-----------------------------------+
| validate   | 实例化验证器                      |
+------------+-----------------------------------+
| vendor     | 快速导入第三方框架类库            |
+------------+-----------------------------------+
| view       | 渲染模板输出                      |
+------------+-----------------------------------+
| widget     | 渲染输出Widget                    |
+------------+-----------------------------------+
| xml        | XML数据输出                       |
+------------+-----------------------------------+

核心框架不依赖任何助手函数，系统只是默认加载了助手函数，配置如下：

.. code-block:: php

    // 扩展函数文件定义
    'extra_file_list'   => [THINK_PATH . 'helper' . EXT],

因此，你可以随意修改助手函数的名称或者添加自己的助手函数，然后修改配置为：

.. code-block:: php

    // 使用扩展函数文件
    'extra_file_list'   => [
        THINK_PATH . 'helper' . EXT,
        APP_PATH . 'helper' . EXT
    ],