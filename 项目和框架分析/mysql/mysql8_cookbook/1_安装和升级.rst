**********
安装和升级
**********

简介
====
安装或者升级MySQL8存在5种不同的方法：

- 软件仓库(YUM或者APT)；
- RPM或者DEB文件；
- 通用二进制文件；
- Docker；
- 源码编译；

使用YUM/APT安装MySQL
====================
主要存在两种类型的仓库软件：

- YUM(Centos，Red Hat，Fedora 和 Oracle Linux)
- APT(Debian，Ubuntu)

使用YUM仓库
-----------

1. 查询 ``Red Hat`` 或者 ``CentOS`` 版本

.. code-block:: shell

    shell> cat /etc/redhat-release
    CentOS Linux release 7.3.1611 (Core)

2. 增加MySQL Yum仓库到你的系统仓库列表。可以通过MySQL提供的RPM包来执行，该包位于  http://dev.mysql.com/downloads/repo/yum/ ，根据你的操作系统来选择。

.. code-block:: shell

    sudo yum localinstall -y mysql57-community-release-el7-11.noarch.rpm

3. 或者你可以复制链接地址，然后直接使用RPM安装

.. code-block:: shell

    sudo rpm -Uvh "https://dev.mysql.com/get/mysql57-communityrelease-el7-11.noarch.rpm"

4. 验证安装

.. code-block:: shell

    yum repolist enabled | grep 'mysql.*-community.*'

5. 设置发布系列。在撰写本书时，MySQL 8 不是一般的可用性（GA）发布。所以 MySQL 5.7 会被选为默认发布系列。为了安装 MySQL 8 ，你必须设置发布系列到 8：

.. code-block:: shell

    sudo yum repolist all | grep mysql

6. 关闭 mysql57-community 和开启 mysql80-community

.. code-block:: shell

    shell> sudo yum install yum-utils.noarch -y
    shell> sudo yum-config-manager --disable mysql57-community
    shell> sudo yum-config-manager --enable mysql80-community

7. 验证 mysql80-community 是否开启

.. code-block:: shell

    sudo yum repolist all | grep mysql8

8. 安装MySQL8

.. code-block:: shell

    shell> sudo yum install -y mysql-community-server

9. 使用如下命令检查安装包

.. code-block:: shell

    shell> rpm -qa | grep -i 'mysql.*8.*'
    perl-DBD-MySQL-4.023-5.el7.x86_64
    mysql-community-libs-8.0.3-0.1.rc.el7.x86_64
    mysql-community-common-8.0.3-0.1.rc.el7.x86_64
    mysql-community-client-8.0.3-0.1.rc.el7.x86_64
    mysql-community-server-8.0.3-0.1.rc.el7.x86_64

使用APT仓库
-----------

1. 增加 ``MySQL APT`` 仓库到你的系统仓库列表。可以通过 ``MySQL`` 的 ``.deb`` 文件安装。可以从 http://dev.mysql.com/downloads/repo/apt/ 下载，或者使用 wget 直接从服务器下载。你可能需要安装 wget (sudo apt-get install wget)

.. code-block:: shell

    shell> wget "https://repo.mysql.com//mysql-aptconfig_0.8.9-1_all.deb"

2. 使用如下命令安装下载的包

.. code-block:: shell

    shell> sudo dpkg -i mysql-apt-config_0.8.9-1_all.deb

3. 在安装过程中，你可以选择MySQL服务器和其它组件的版本。Enter确定选择，Up和Down作为导航键。如果你想改变释放版本，执行如下命令：

.. code-block:: shell

    shell> sudo dpkg-reconfigure mysql-apt-config

4. 使用如下命令更新来自MySQL APT仓库的包信息：

.. code-block:: shell

    shell> sudo apt-get update

5. 安装MySQL。安装过程需要提供root用户密码。

.. code-block:: shell

    shell> sudo apt-get install -y mysql-community-server

6. 验证包。 ``ii`` 指示包已经安装：

.. code-block:: shell

    shell> dpkg -l | grep -i mysql

使用RPM或者DEB文件安装MySQL8.0
==============================
使用仓库安装需要连接网络，如果没有网络，则需要下载 ``RPM`` 或者 ``DEB`` 文件来安装。

主要存在两种类型的安装文件：

- RPM(CentOS，Red Hat，Fedora 和 Oracle Linux)；
- DEB(Debian，Ubuntu)；

存在多个需要安装的包：

- mysql-community-server ：数据库服务端和相关工具；
- mysql-community-client ：数据库客户端和相关工具；
- mysql-community-common ：服务端和客户端库的公共文件；
- mysql-community-devel ：MySQL数据库应用使用的开发头文件和库，如 Perl MySQL 模块；
- mysql-community-libs ：某些语言和应用程序需要动态加载和使用MySQL的共享库( ``libmysqlclient.so*`` )。
- mysql-community-libs-compat ：为更老的释放版本提供的共享库。如果您安装的应用程序与旧版本的MySQL动态链接，但您希望在不破坏库依赖性的情况下升级到当前版本，请安装此软件包。

使用RPM包
---------

1. 从MySQL下载页面 http://dev.mysql.com/downloads/mysql/ 选择你的操作系统和CPU架构匹配的包。

.. code-block:: shell

    shell> wget 'https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.3-0.1.rc.el7.x86_64.rpmbundle.tar'

2. 解压那个包：

.. code-block:: shell

    shell> tar xfv mysql-8.0.3-0.1.rc.el7.x86_64.rpm-bundle.tar

3. 安装MySQL：

.. code-block:: shell

    shell> sudo rpm -i mysql-community-{server-8,client,common,libs}*

4. RPM不能够解决依赖问题，安装过程可能会出现问题。如果遇到这个问题，用如下命令：

.. code-block:: shell

    shell> sudo yum install mysql-community-{server-8,client,common,libs}* -y

5. 验证安装：

.. code-block:: shell

    shell> rpm -qa | grep -i mysql-community

使用APT包
---------

1. 从MySQL下载页面 http://dev.mysql.com/downloads/mysql/ 下载 MySQL APT 包：

.. code-block:: shell

    shell> wget "https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-server_8.0.3-rc-1ubuntu16.04_amd64.deb-bundle.tar"

2. 解压那个包：

.. code-block:: shell

    shell> tar -xvf mysql-server_8.0.3-rc-1ubuntu16.04_amd64.deb-bundle.tar

3. 安装依赖，你可能需要安装 libaio1 包。

.. code-block:: shell

    shell> sudo apt-get install -y libaio1

4. 更新 libstdc++6 到最新

.. code-block:: shell

    shell> sudo add-apt-repository ppa:ubuntutoolchain-r/test
    shell> sudo apt-get update
    shell> sudo apt-get upgrade -y libstdc++6

5. 更新 libmecab2 到最新。如果 universe 没有被包含，然后增加如下行到文件末尾：

.. code-block:: shell

    shell> sudo vi /etc/apt/sources.list
    deb http://us.archive.ubuntu.com/ubuntu zesty
    main universe

    shell> sudo apt-get update
    shell> sudo apt-get install libmecab2

6. 使用如下命令预配置MySQL服务器包。它会设置root用户密码：

.. code-block:: shell

    shell> sudo dpkg-preconfigure mysql-communityserver_*.deb

7. 安装数据库通用文件包，客户端包，客户端元数据包，服务端包和服务端元数据包；可以一条命令搞定：

.. code-block:: shell

    shell> sudo dpkg -i mysql-{common,communityclient-core,community-client,client,communityserver-core,community-server,server}_*.deb

8. 安装共享库：

.. code-block:: shell

    shell> sudo dpkg -i libmysqlclient21_8.0.1-dmr-1ubuntu16.10_amd64.deb

9. 验证安装：

.. code-block:: shell

    shell> dpkg -l | grep -i mysql
    ii mysql-client 8.0.3-rc-1ubuntu14.04 amd64 MySQL Client meta package
    depending on latest version
    ii mysql-common 8.0.3-rc-1ubuntu14.04 amd64 MySQL Common
    ii mysql-community-client 8.0.3-rc-1ubuntu14.04 amd64 MySQL Client
    ii mysql-community-client-core 8.0.3-rc-1ubuntu14.04 amd64 MySQL Client Core Binaries
    ii mysql-community-server 8.0.3-rc-1ubuntu14.04 amd64 MySQL Server
    ii mysql-community-server-core 8.0.3-rc-1ubuntu14.04 amd64 MySQL Server Core Binaires
    ii mysql-server 8.0.3-rc-1ubuntu16.04 amd64 MySQL Server meta package
    depending on latest version

使用一般二进制在Linux安装MySQL
==============================
使用软件包安装，首先需要安装依赖且可能和其它包冲突。这时，可以使用一般二进制来安装MySQL。二进制文件使用高级编译器进行预编译，并使用最佳选项构建，以获得最佳性能。

MySQL依赖 libaio 库。

在基于YUM的系统：

.. code-block:: shell

    shell> sudo yum install -y libaio

在基于APT的系统：

.. code-block:: shell

    shell> sudo apt-get install -y libaio1

从MySQL下载页面， https://dev.mysql.com/downloads/mysql/ 选择对应版本。然后下载：

.. code-block:: shell

    shell> cd /opt
    shell> wget "https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.3-rc-linux-glibc2.12-x86_64.tar.gz"

使用如下步骤安装 ``MySQL`` ：

1. 增加 ``mysql`` 组和 ``mysql`` 用户。所有的文件和目录应该属于 ``mysql`` 用户：

.. code-block:: shell

    shell> sudo groupadd mysql
    shell> sudo useradd -r -g mysql -s /bin/false mysql

2. 指定安装位置：

.. code-block:: shell

    shell> cd /usr/local

3. 解压二进制文件。将未解压缩的二进制文件保留在同一位置，并将其符号链接到安装位置。 通过这种方式，您可以保留多个版本，并且升级非常简单。例如，您可以下载另一个版本并将其解压缩到其他位置；升级时，您需要做的就是更改符号链接：

.. code-block:: shell

    shell> sudo tar zxvf /opt/mysql-8.0.3-rc-linuxglibc2.12-x86_64.tar.gz

4. 创建符号链接

.. code-block:: shell

    shell> sudo ln -s mysql-8.0.3-rc-linuxglibc2.12-x86_64 mysql

5. 创建必须的目录然后改变所有者为 ``mysql`` ：

.. code-block:: shell

    shell> cd mysql
    shell> sudo mkdir mysql-files
    shell> sudo chmod 750 mysql-files
    shell> sudo chown -R mysql .
    shell> sudo chgrp -R mysql .

6. 初始化 mysql ，它生成一个临时密码：

.. code-block:: shell

    shell> sudo bin/mysqld --initialize --user=mysql

7. 为SSL设置RSA。参考14章 使用X509设置加密连接。注意生成的临时密码：

.. code-block:: shell

    shell> sudo bin/mysql_ssl_rsa_setup

8. 改变二进制目录属主为 ``root`` ， ``data`` 文件为 ``mysql`` ：

.. code-block:: shell

    shell> sudo chown -R root .
    shell> sudo chown -R mysql data mysql-files

9. 复制启动脚本到 init.d ：

.. code-block:: shell

    shell> sudo cp support-files/mysql.server /etc/init.d/mysql

10. 把 mysql 二进制路径增加到环境变量 PATH 中：

.. code-block:: shell

    shell> export PATH=$PATH:/usr/local/mysql/bin

11. 参考启动或者停止 MySQL8 部分来启动 MySQL :

安装完成后，你将会在 ``/usr/local/mysql`` 目录中发现如下目录：

目录   目录内容
bin   mysqld服务端，client和编程工具
data   日志文件，数据库文件
docs   MySQL手册
man   Unix手册页面
include  包含头文件
lib  库
share  其他支持文件，包括错误消息，示例配置文件，用于数据库安装的SQL

其它
----

1. 源码编译 https://dev.mysql.com/doc/refman/8.0/en/source-installation.html
2. 使用Docker https://hub.docker.com/r/mysql/mysql-server/

开始或停止MySQL8
================
``mysqld`` 是 ``mysql`` 服务端进程。所有的启动方法调用 ``mysqld`` 脚本。

启动MySQL8服务端
----------------
1. 使用服务：

.. code-block:: shell

    shell> sudo service mysql start

2. 使用 init.d ：

.. code-block:: shell

    shell> sudo /etc/init.d/mysql start

3. 如果没有找到启动脚本，你可以从解压包中复制一个：

.. code-block:: shell

    shell> sudo cp /usr/local/mysql/supportfiles/mysql.server /etc/init.d/mysql

4. 如果安装包含 systemd 支持：

.. code-block:: shell

    shell> sudo systemctl start mysqld

5. 如果没有 ``systemd`` 支持，可以使用 ``mysqld_safe`` 启动 ``MySQL`` 。 ``mysqld_safe`` 是 ``mysqld`` 的启动程序脚本，用于保护 ``mysqld`` 进程。如果 ``mysqld`` 被杀死， ``mysqld_safe`` 会再次尝试启动该进程：

.. code-block:: shell

    shell> sudo mysqld_safe --user=mysql &

启动之后：

1. 服务端被初始化；
2. ``SSL`` 证书和 ``key`` 文件生成于 ``data`` 目录；
3. ``validate_password`` 插件被安装和开启；
4. 一个超级账户， ``root'@'localhost`` 被创建。超级用户密码被设置然后存储在错误日志文件中，为了获取它，使用如下命令：

.. code-block:: shell

    sudo grep "temporary password" /var/log/mysqld.log

然后，你可以使用临时密码连接 MySQL ：

.. code-block:: shell

    shell> mysql -u root -pbkvotsG:h6jD

5. 通过使用生成的临时密码登录并为超级用户帐户设置自定义密码，尽快更改 ``root`` 密码：

.. code-block:: shell

    mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'NewPass4!';

停止MySQL8服务端
----------------

1. 使用服务：

.. code-block:: shell

    shell> sudo service mysqld stop

2. 使用 init.d ：

.. code-block:: shell

    shell> sudo /etc/init.d/mysql stop

3. 如果安装包包含 ``systemd`` 支持：

.. code-block:: shell

    shell> sudo systemctl stop mysqld

4. 使用mysqladmin：

.. code-block:: shell

    shell> mysqladmin -u root -p shutdown

检查MySQL8服务端状态
--------------------

1. 使用服务：

.. code-block:: shell

    shell> sudo systemctl status mysqld

2. 使用init.d：

.. code-block:: shell

    shell> sudo /etc/init.d/mysql status

3. 如果安装包包含 systemd 支持：

.. code-block:: shell

    shell> sudo systemctl status mysqld

卸载MySQL8
==========
如果你安装混乱或者你不想要MySQL8版本，你可以使用如下步骤卸载。在卸载前，确保备份文件。如果需要，请停止MySQL。

基于YUM系统
-----------

1. 检查是否存在包：

.. code-block:: shell

    shell> rpm -qa | grep -i mysql-community
    mysql-community-libs-8.0.3-0.1.rc.el7.x86_64
    mysql-community-common-8.0.3-0.1.rc.el7.x86_64
    mysql-community-client-8.0.3-0.1.rc.el7.x86_64
    mysql-community-libs-compat-8.0.3-0.1.rc.el7.x86_64
    mysql-community-server-8.0.3-0.1.rc.el7.x86_64

2. 移除包。您可能会收到通知，其他包依赖于 ``MySQL`` 。 如果您计划再次安装 ``MySQL`` ，可以通过传递 ``--nodeps`` 选项忽略该警告：

.. code-block:: shell

    shell> rpm -e <package-name>

例如：

.. code-block:: shell

    shell> sudo rpm -e mysql-community-server

3. 移除所有的包：

.. code-block:: shell

    shell> sudo rpm -qa | grep -i mysql-community | xargs sudo rpm -e --nodeps

基于APT系统
-----------

1. 检查是否存在mysql包：

.. code-block:: shell

    shell> dpkg -l | grep -i mysql

2. 使用如下命令移除包：

.. code-block:: shell

    shell> sudo apt-get remove mysql-communityserver mysql-client mysql-common mysqlcommunity-client mysql-community-client-core mysql-community-server mysql-community-servercore -y

或者使用如下命令：

.. code-block:: shell

    shell> sudo apt-get remove --purge mysql-\* -y
    shell> sudo apt-get autoremove -y

3. 验证包已经被卸载了：

.. code-block:: shell

    shell> dpkg -l | grep -i mysql

.. note:: rc表示包已经被移除，只有配置文件被保存。

卸载二进制
----------
卸载二进制安装非常简单。你只需要移除符号链接即可：

1. 进入安装目录：

.. code-block:: shell

    shell> cd /usr/local

2. 检查 ``mysql`` 指向的位置，它将显示它引用的路径：

.. code-block:: shell

    shell> sudo ls -lh mysql

3. 移除 mysql :

.. code-block:: shell

    shell> sudo rm mysql

4. 移除二进制包：

.. code-block:: shell

    shell> sudo rm -f /opt/mysql-8.0.3-rc-linuxglibc2.12-x86_64.tar.gz

使用systemd管理MySQL服务器
==========================
如果使用 ``RPM`` 或 ``Debian`` 软件包服务端安装 ``MySQL`` ，则启动和关闭由 ``systemd`` 管理。在支持 ``systemd`` 的平台上安装 ``MySQL`` ，未安装 ``mysqld_safe`` ， ``mysqld_multi`` 和 ``mysqld_multi.server`` 。 ``MySQL`` 服务器启动和关闭由 ``systemd`` 使用 ``systemctl`` 命令管理。 您需要按如下方式配置 ``systemd`` 。

.. note:: 基于 ``RPM`` 的系统使用 ``mysqld.service`` 文件而基于 ``APT`` 的系统使用 ``mysql.server`` 文件。

1. 创建本地 systemd 配置文件：

.. code-block:: shell

    shell> sudo mkdir -pv /etc/systemd/system/mysqld.service.d

2. 创建或者打开 conf 文件：

.. code-block:: shell

    shell> sudo vi /etc/systemd/system/mysqld.service.d/override.conf

3. 输入如下：

.. code-block:: shell

    [Service]
    LimitNOFILE=max_open_files (ex: 102400)
    PIDFile=/path/to/pid/file (ex: /var/lib/mysql/mysql.pid)
    Nice=nice_level (ex: -10)
    Environment="LD_PRELOAD=/path/to/malloc/library"
    Environment="TZ=time_zone_setting"

4. 重新加载 systemd ：

.. code-block:: shell

    shell> sudo systemctl daemon-reload

5. 对于临时改变，你可以不必编辑 ``conf`` 文件：

.. code-block:: shell

    shell> sudo systemctl set-environment MYSQLD_OPTS="--general_log=1"
    or unset using
    shell> sudo systemctl unset-environment MYSQLD_OPTS

6. 修改 systemd 环境之后，重新启动服务端使改变生效。

在RPM平台：

.. code-block:: shell

    shell> sudo systemctl restart mysqld

在Debian平台：

.. code-block:: shell

    shell> sudo systemctl restart mysql

- 启动mysql服务 ``systemctl start mysqld.service``
- 停止mysql服务 ``systemctl stop mysqld.service``
- 重启mysql服务 ``systemctl restart mysqld.service``
- 查看mysql服务当前状态 ``systemctl status mysqld.service``
- 设置mysql服务开机自启动 ``systemctl enable mysqld.service``
- 停止mysql服务开机自启动 ``systemctl disable mysqld.service``

从MySQL8降级
============
降级只能降级到前一个版本，不能跨版本降级。

- 就地降级（在 MySQL 8 中降级）
- 逻辑降级

In-place 降级
-------------


逻辑降级
--------


升级到MySQL8
============
MySQL 8 使用全局数据字典( data dictionary )，其中包含有关事务表中数据库对象的信息。 在以前的版本中，字典数据存储在元数据文件和非事务系统表中。 您需要将数据目录从基于文件的结构升级到数据字典结构。

和降级一样，你可以使用两种方法降级：

- In-place 升级；
- 逻辑升级；

您还应该在升级之前检查一些先决条件。

安装MySQL工具
=============
MySQL实用程序为您提供了非常方便的工具，可以顺利地执行日常操作，而无需太多的手动操作。

基于YUM系统
-----------
从 https://dev.mysql.com/downloads/utilities/ 页面下载文件，选择 Red Hat Enterprise Linux/Oracle Linux 的版本，或者直接通过 ``wget`` 来下载：

.. code-block:: shell

    shell> wget https://cdn.mysql.com//Downloads/MySQLGUITools/mysqlutilities-1.6.5-1.el7.noarch.rpm
    shell> sudo yum localinstall -y mysql-utilities-1.6.5-1.el7.noarch.rpm


基于APT系统
-----------
从 https://dev.mysql.com/downloads/utilities/ 页面下载文件，选择 Ubuntu Linux 的版本，或者直接通过 ``wget`` 来下载：

.. code-block:: shell

    shell> wget "https://cdn.mysql.com//Downloads/MySQLGUITools/mysql-utilities_1.6.5-1ubuntu16.10_all.deb"
    shell> sudo dpkg -i mysql-utilities_1.6.5-1ubuntu16.10_all.deb
    shell> sudo apt-get install -f
