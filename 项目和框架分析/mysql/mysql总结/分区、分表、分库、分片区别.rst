*************
分区、分表、分库、分片区别
*************

分区的概念
==========

数据分区是一种物理数据库的设计技术，它的目的是为了在特定的 ``SQL`` 操作中减少数据读写的总量以缩减响应时间。

分区并不是生成新的数据表，而是将表的数据均衡分摊到不同的硬盘，系统或是不同服务器存储介子中，实际上还是一张表。另外，分区可以做到将表的数据均衡到不同的地方，提高数据检索的效率，降低数据库的频繁 ``IO`` 压力值，分区的优点如下：

1. 相对于单个文件系统或是硬盘，分区可以存储更多的数据；
2. 数据管理比较方便，比如要清理或废弃某年的数据，就可以直接删除该日期的分区数据即可；
3. 精准定位分区查询数据，不需要全表扫描查询，大大提高数据检索效率；
4. 可跨多个分区磁盘查询，来提高查询的吞吐量；
5. 在涉及聚合函数查询时，可以很容易进行数据的合并；

分表的概念
==========
https://blog.csdn.net/qq_28289405/article/details/80576614



扩展
====
https://www.infoq.cn/article/key-steps-and-likely-problems-of-split-table

垂直
----

垂直分表
^^^^^^^^

垂直分库
^^^^^^^

水平
----

水平分表
^^^^^^^^

水平分库分表(分片)
^^^^^^^^^^^^^^^^^
https://www.scienjus.com/database-sharding-review/

分片与数据库分区(Partition)的区别
================================
Sharding 不是一个某个特定数据库软件附属的功能，而是在具体技术细节之上的抽象处理，是水平扩展(Scale Out，亦或横向扩展、向外扩展)的解决方案， **其主要目的是为突破单节点数据库服务器的 I/O 能力限制，解决数据库扩展性问题。**

有的时候， Sharding 也被近似等同于水平分区(Horizontal Partitioning)，网上很多地方也用水平分区来指代 Sharding ，但我个人认为二者之间实际上还是有区别的。的确， Sharding 的思想是从分区的思想而来，但数据库分区基本上是数据对象级别的处理，比如表和索引的分区，每个子数据集上能够有不同的物理存储属性，还是单个数据库范围内的操作，而 Sharding 是能够跨数据库，甚至跨越物理机器的。

.. image:: ./images/分区和分片区别.bmp

spider storage engine 就是实现 Sharding 理念的一项技术。

 经过上面的分析，个人认为，如果能够保证数据量很难超过现有数据库服务器的物理承载量，那么只需利用 MySQL5.1 提供的 分区(Partition)功能来改善数据库性能即可；否则，还是考虑应用 Sharding 理念吧， spider storage engine 就是一个不错的选择。