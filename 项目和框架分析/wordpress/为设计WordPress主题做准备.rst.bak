=========================
为设计WordPress主题做准备
=========================
本章的目的是着眼于最终形成WordPress主题，帮助您创建一个有效的基于HTML5和CSS3模板主题。这个主题将会响应式的，这意味着它会最佳化显示内容在移动设备以及桌面浏览器上。与此同时，我们将遵守W3C标准，并遵循良好的可用性实践。我们希望这一章，即使你设计专业人士也许会发现有趣的琐事，将帮助您在您的WordPress主题设计创作。

WordPress主题设计本质上是网页设计，所以在整个章节，我们将更多地关注思考语义，标准和可用性。然后，我们将重点关注我们想要使用最简单，直接的手段来设计内容：铅笔和纸张，HTML和CSS，最后是我们的图形编辑/绘图程序。这种方法将给我们一个更灵活，而且更加牢固的HTML和CSS结构。

首先，您可能会发现这种方法有点奇怪，但这绝对不是设计主题的唯一正确的方式。只需阅读章节，即使您已经是一个有经验的Photoshop设计者，请继续尝试使用此步骤中的步骤设置您的HTML和CSS章节。你可能会发现它有助于你的过程。

在本章中，我们将介绍如何实施我们在第1章中了解到的策略，作为WordPress主题设计师开始：

	- 根据语义内容构建我们的布局
	- 添加我们的内容，字体和大小
	- 使用我们的CSS布局框架设置我们的布局
	- 使用CSS3和我们面向对象的方法添加我们的图形元素

在本章结尾，我们将有一个基于HTML5和CSS3的模板“comp”
或我们的WordPress主题设计的“模拟”，然后分解，编码和
组装成一个完全专业的WordPress主题。

准备设计
========
Design Comp是用于设计和印刷的缩写。 它是指初步设计
或草绘为“comp”，如“综合艺术品”或“创作”。它也被称为
“模型”，“样本艺术品”或“虚拟艺术作品”。我们会在这一个章节里创造其中的一个，然后用于在第4章“高级主题功能”中创建我们的WordPress主题。

在浏览器中设计
--------------
历史上，大多数网页设计师都使用Photoshop或其他图形程序为站点创建一个静态设计，然后自己开发站点或通过给开发者创建代码。

这种方法反映了网页设计在印刷设计中的背景，它很好地利用这种过程。 它给你一个很好的静态模型，你可以给客户审核。

但是这种方法不再有效了。现在我们的网站需要在各种设备看起来很好，单一的静态设计将不适用于每个屏幕尺寸。这是否意味着我们必须为每个可想到的屏幕尺寸准备一个完整的设计？当然不是。我们正在采取的方法是在浏览器中设计程序来替换图形中设计程序。

你的方法取决于你自己的喜好和你的需要项目，但许多设计师工作的通用过程是：

	1. 使用 **情绪板** 或类似产品为该网站生成设计概念和想法技术，所以你知道你将要使用的样式和图形。
	2. 在不同的屏幕宽度上为站点布局准备一些 **线框图** 。这些可以是纸上的粗略草图或使用线框工具。
	3. 使用在您的线框和您的心情板上定义图形的布局在浏览器中创建设计的静态模型。这将会给你设计的工作原型，给客户在不同的设备上演示他们的网站更有效。
	4. 使用构建你的模型的HTML和CSS，将该静态设计转换成WordPress主题，并添加WordPress的好处。

这是我们将在本章中使用的过程，这将使我们进入第3步处理。在第4章“高级主题特征”中，我们将转到最终的步骤，把我们的模型转变为WordPress的主题。

开始设计
========
第一步是计划我们的设计和布局。

在这之前，您需要考虑网站和客户的要求，如果您正在设计一个主题以发布给其他用户，请考虑它们怎样使用它。

想象你是一个来到该网站获取它包含信息的人。你认为用户实际上会做什么？他们可能有什么样的目地？他们如何努力或容易地实现这些目标？你想要它们实现这些目标有多难？

您是否遵守标准的使用约定？ 例如，如果文本中有下划线和/是不同的颜色，我们预计那个文字就是一个链接。如果有东西看起来像按钮，我们期望点击它来做某事。

动手——计划我们的设计
----------------------
如果您还没有一个完整的设计，您将需要创建一些图形作为起点和一些线框图。你可以这样做：

	1. 使用您首选的图形程序，创建一些设计元素和概念，如按钮，配色方案，logos，背景，或其他任何您的网站需要的。我们的设计元素都包含在我们在前面看到的设计图中。
	2. 在纸张上或使用线框图工具，为你的响应式设计的目标屏幕宽度创建一些线框。现在我们会在纸上做我们的。您可能需要为网站的多个区域准备线框，例如，站点不同的区域具有一个不同的边框或者没有边框。
	3. 现在重新审视您的设计和您网站的用户。做任何对您需要的线框进行调整。

创建你的设计——从草图到屏幕
============================
我们现在可以打开我们的HTML编辑器，并开始制作我们的设计模型。
我们将使用我们的草图，视觉元素将在图像编辑器中创建，然后在HTML和CSS中完成布局。

动手——创建我们的静态HTML文件
------------------------------
我们需要一个单一的HTML设计，所以让我们创建它并开始设置它：

	1. 打开您的HTML或文本编辑器，并创建一个新的index.html 文件。
	2. 将以下内容添加到文档中的第一行： **<！DOCTYPE html>** 
	3. 保存你的index.html文件。

语义体
======
在我们的DOCTYPE之后，我们可以添加 *HTML* 的其他基本元素，即 ``html`` 标签， ``head`` 标签， ``title`` 标签和 ``body`` 标签。

动手——增加基本的HTML结构
--------------------------
下一步是给我们的HTML文件一些基本的结构：

	1. 在DOCTYPE声明之下，添加基本的HTML标记，这是任何网页工作所需的结构：
	 
	 .. code-block:: html

	    <html dir="ltr" lang="en-US">
	      <head>
                <meta charset="UTF-8" />
                <title> </title>
              </head>
              <body>
              </body>
            </html>
	2. 保存你的index.html文件。

动手——在语义结构中增加元素
----------------------------
我们的模型的标记现在需要我们在 ``body`` 标签之间创建的一些标签。

	1. 在index.html的<body>之间，增加如下代码：

	  .. literalinclude:: index.html
	     :language: html
	     :emphasize-lines: 15-18
             :linenos:
	2. 保存你的index.html文件。

如果搜索引擎机器人或使用纯文本/文本到语音浏览器或移动设备的人
到达并浏览了我们的网站，以下是他们会看到的顺序：

	- 标题：知道你在看什么；
	- 主要内容：了解您要查找的内容；
	- 左侧栏内容：在主要内容下，我们应该有更多的兴趣项目功能列表，类别和档案；
	- 右栏内容：广告等非内容相关的辅助信息；
	- 首页导航：即使在设计中，这将在顶部，我们已经在纯文本查看中将其编码为使用锚点链接；
	- 页脚信息：如果这是一个真实内容的页面，很高兴看到这是谁的网站信息；

关联我们的CSS样式表
===================
所以，现在我们有一个HTML页面，下一步是为我们的CSS创建一个样式表。

这是一个快速回顾如何应用以下CSS选择器：

	- HTML对象标签（标题，段落，列表项，div标签等）可以列为CSS选择器，例如div {...} p {...}。
	- ID属性名称，只能在页面上使用一次，在CSS选择器前面具有“＃”哈希标记，例如#container {...}，#sidebar{...}。
	- Class名称是可以结合其他类,在页面上应用多次的属性，在选择器名称前面有一个句点（.）例如.floatLeft {...}。

动手——创建和包含一个style.css到你的index.php页面
--------------------------------------------------
让我们创建我们的样式表：

	1. 在你的文本编辑器中，创建一个新的文件并将其命名为style.css。确保它在与index.php文件相同的目录。
	2. 打开你的index.html文件，并在<head>标签的<title>下面标签，添加以下链接到您的style.css文件：
	 .. code-block:: html
	
		<link rel="stylesheet" type="text/css" media ="all" href ="style.css"/>

为响应式做准备——视口和苹果手机元数据标签
==========================================
我们的主题将是响应式的，它的布局将适应查看设备的宽度。为了使其正常工作，并为移动设备正确宽度显示站点，我们需要在我们的index.html中添加一些更多的代码到我们的<head>部分。

动手——增加视口和苹果手机元数据标签
------------------------------------
增加如下标记很简单：

	1. 在你index.html头部标签中，放置如下元数据标签：
	  .. code-block:: html

	    <meta name="viewport" content="width=device-width">
	    <meta name="apple-mobile-web-app-capable" content="yes">
	    <meta name="apple-mobile-web-app-status-bar-style" content="black">

	我们增加三个meta标签到我们的文件来确保主题在移动设备的行为。具体作用如下：

		- ``viewport`` 元数据标签是一个Webkit而非W3C标准需要的。 ``width`` 属性控制视口。因为我们基于屏幕大小来样式化我们的布局，所以，把该值设置为 ``device-width`` 。
		- 通过设置 ``apple-mobile-web-app-capable`` 元数据标签为 ``yes`` ，站点将会运行在全屏模式，意味着浏览器的默认工具栏和菜单栏将不会显示。虽然这个标签包含 ``apple`` 但是，它实际影响所有基于Webkit的浏览器，所以，安卓设备也从中受益。
		- 在iOS设备上， ``apple-mobile-web-app-status-bar-style`` 指定状态栏设置。此设置会更改状态栏的颜色，然后将其移除或允许它保持在顶部。如果我们把它设置为默认值，它将保留它正常的“iOS渐变灰色”，位于内容的上方。我们已经变成黑色了（唯一允许您更改颜色的颜色）。
		- 如果我们将它改为 ``black-translucent`` ，那么它将永久地停留HTML内容的顶部并且稍微透明。如果在浏览网站时您的用户需要访问到状态栏，您可能需要考虑这样做设置。

		当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari。
		
		.. code-block:: html

			<meta name="apple-mobile-web-app-capable" content="yes" />
			<!-- ios7.0版本以后，safari上已看不到效果 -->
		
		将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式。

		.. code-block:: html

			<meta name="apple-mobile-web-app-status-bar-style" content="black" />
			<!-- 可选default、black、black-translucent -->

添加内容
========
我们现在可以添加一些基于文本的内容。即使你设计的视觉效果非常好的主题，文字是网站最常见的元素，所以你应该思考如何显示。

我们将首先向我们的网站添加一些虚拟文本。我们创建元素
并引入这些内容，这将使用最新的语义HTML5元素。

动手——增加样例文本到我们语义部分
----------------------------------
如果添加虚拟文本，可以使用lorem ipsum文本（可以访问http://www.lipsum.com），或者你可以添加一些更多的描述
文字（你可以在http://notloremipsum.com上找到一个例子）。第二
方法有助于为客户建立网站，因为它可以帮助他们看到什么样的
内容会去哪里。为了我们的目的，我们将使用lorem ipsum。
	1. 在index.html中，删除任何位于 ``body`` 之间的HTML。
	2. 增加带有内容的语义元素。
	  .. literalinclude:: content.html
	     :language: html
	     :linenos:
	
	3. 保存你的index.html文件。

我们增加了一些带内容的语义元素到我们的站点。

让我们查看一些我们包含的元素：

	- 一个 ``#container`` div包含我们页面内容；
	- ``header`` 元素，包含站点标题和描述，内置一个带 ``.screen-text`` 类的 ``hgroup`` 标签，以便浏览器关闭CSS时显示的内容；
	- 一个 ``#container2`` div来持有文章或者页面内容和边栏；
	- 包含所有帖子或页面内容的部分；
	- 具有 ``.post`` 类的 ``article`` 元素;
	- 一个 ``h2`` 元素作为文章的标题；
	- 带有作者信息的 ``p`` 元素;
	- 一个具有 ``.entry-content`` 类的div，用于保存帖子内容；
	- 更多的 ``p`` 元素包含内容本身，这些将最终成为由网站WordPress的数据库自动填充，但现在我们使用虚拟文本；

样式我们的字体
==============
所以，现在我们将为您的文字添加一些样式，从字体或字体系列开始
用来显示它。

通过将字体系列分配给我们的CSS规则，我们可以设置备份字体选择。 这意味着如果有人没有我们的首选字体，那么他们可能会有我们指定的备选字体，如果他们都没有的话。那么，至少我们可以依靠浏览器的内置“generic”分配字体。只需指定serif，sans-serif或mono-sapce。

.. note::

  当指定字体系列时，最好包括一个或多个通常在PC，Mac和移动设备上都可以使用的字体，以及这在屏幕上看起来不错（就像在纸上）。 为屏幕设计的字体包括Verdana和Georgia，以及你的系统中常用的其他字体如Arial和Times New Roman。
 
我们的 ``headers`` 将使用Helvetica与Arial作为默认字体，我们的文本的 ``body`` 内容将会是Helvetica的Trebuchet，然后是Verdana作为默认字体。

指定字体系列
------------

动手——设置字体系列
++++++++++++++++++++
让我们增加一些字体系列到我们样式表中：
	1. 在你的style.css文件中，增加如下代码：

	 .. literalinclude:: style.css
		:language: css

	2. 保存你的样式表；

我们设置我们的主题将使用的字体系列，包括：
	- ``body`` 元素的默认字体，这将应用于我们没有指定任何可选字体系列的元素，因为CSS继承的原因；
	- 字体系列用于我们的文章标题和链接；
	- 最后，一个为pre和code元素指定的字体系列，换句话说就是在我们的主题中显示的代码的字体；

**@font-face技术**

你会很高兴知道我们可以利用更广泛的排版世界字体而不是只寄希望于别人的电脑上安装的字体。使用 ``@font-face`` 等技术，您可以向您网站的用户提供您选择的字体。我们会去在第七章讨论这些技巧。

指定字体大小
------------
我们有我们的字体系列，但我们需要告诉浏览器在我们的主题文本显示什么尺寸。

动手——设置字体大小
++++++++++++++++++++
在CSS中，为我们设置的字体系列声明添加了一些字体大小的样式。
	1. 在style.css中，编辑如下代码:
	 .. literalinclude:: style1.css
		:language: css
		:lines: -43
	
	2. 现在为一些其他元素添加一些更具体的高度样式。 在你刚添加的代码下面的添加如下代码：
	 .. literalinclude:: style1.css
		:language: css
		:lines: 44-

我们添加了一些额外的字体大小的样式。我们也为边界设置了一些样式，给我们的文本一些它需要额外的空间。

正如你所看到的，在以前的代码示例中，我们在body内使用的唯一的em单位。我们的标题、段落和其他基于排版的规则的其余部分依赖于
根据百分比增加或减小字体大小。 90％= 0.9em，所以90％的尺寸
将字体缩小，而280％的字体大大增加。现在，如果我们的客户要求
修改版面大小时。直接调整body的em值，基于我们分配的百分比其他一切都会上升或下降。

然后我们转到使用百分比来帮助我们使用line-height属性。同时使用一个不同的字体家族也确保我们的一个href链接脱颖而出，但当悬停时还是有熟悉的下划线出现。

以这种方式使用em和百分比也比使用像素更好，因为这意味着，如果用户已经设置浏览器来调整文本大小，这将被应用于我们的主题整个文本
，而不是被任何基于像素的文本样式覆盖。

对我们的文字进行风格化的最后阶段是当CSS打开时，处理我们想要从浏览器隐藏的文字，同时使它们对屏幕阅读器和搜索引擎机器人可见。

动手——处理搜索引擎/屏幕阅读器文本
+++++++++++++++++++++++++++++++++++
您将在HTML5标记中注意到，我们有几个headers和hgroups分配了一个.screen-text的类。这是用户在使用样式的浏览器中不能看见，但使文本屏幕阅读器可见和对SEO有用的。
	- 在你样式的TYPOGRAPHY中，增加如下代码：
	 .. code-block:: css

	  /* Text meant only for screen readers */
	  .screen-text{
		position: absolute;
		left: -5000em;
	  }

	  假设用户的屏幕小于5000em，则不能查看该元素。

	- 保存你的style.css文件；

使用css设置我们布局
===================
现在我们已经设置了我们的字体排版，我们开始使这个东西看起来像我们的草图！首先，我们将添加一个调用layout-core样式表，给我们的主题一些基本布局样式。

动手——引用布局框架来布局
--------------------------
确保我们的样式文件引用布局框架：
	1. 在我们样式表的顶部，增加如下代码：
	 .. code-block:: css

		/*
		---------------------------------------------------
		|NOTE: This style sheet leverages: layout-core.css. |
		---------------------------------------------------
		*/
		@import url(layout-core.css);
	
	2. 确保在你样式表目录中具有一个layout-core.css文件；
	3. 保存你的样式表；

Layoutcore使用一些classes来帮助我们实现我们的布局。要使用它们，您只需分配div，section，article或aside标签浮动是left还是right然后分配该HTML元素的宽度为full、half、two-thirds、three-quarters、third或者quarter。本章稍后将介绍。

.. note::
	**CSS重置**

	当然，您可能会从头开始构建自己的样式表，而不包含layout-core.css。如果是这样，最好包括一个重置样式在样式表的开始处。这将重置任何浏览器特定的CSS，所以无论用户是什么浏览器，我们可以从一个干净的样式开始。

	我们的layout-core.css文件包含一个重置，所以如果你导入，你
	不需要添加另一个。
	
	有关CSS重置的更多信息，以及使用的重要示例，请参阅http：//meyerweb.com/eric/tools/css/reset/。

现在我们已经设置了 ``@import`` 指令，我们将继续添加一些媒体查询使我们的主题适合响应布局。

媒体查询位于样式表的末尾，依赖正在浏览网站屏幕的宽度来指定要应用的样式。更多关于建立响应主题和利用媒体查询，请参阅WordPress Mobile Web Development：初学者指南。

动手——增加媒体查询
--------------------
下面的步骤允许你增加媒体查询：
	1. 在你的style.css文件中，增加如下媒体查询：
	 .. code-block:: css

		@media (min-width: 1220px) {
		}

		@media (max-width: 1024px) {
		}

		@media (min-width: 480px) and (max-width: 800px) {
		}

		@media (max-width: 480px) {
		}

		@media only screen and (min-width: 320px) and (max-width: 480px) {
		}
	
	2. 保存你的样式表

我们添加了一些媒体查询来定位最常用的屏幕尺寸。让我们看看他们如何工作：
	- @media（min-width：1220px）的目标是非常大的屏幕；
	- @media（max-width：1024px）瞄准小型桌面屏幕和更大的平板电脑屏幕；
	- @media（min-width：480px）和（max-width：800px）目标为小平板电脑屏幕或更大的平板电脑屏幕；
	- @media（max-width：480px）针对包括手机在内的小屏幕；
	- @media only screen和（min-width：320px）和（max-width：480px）目标手机;

这些媒体查询适用于大多数可用的设备。但随着越来越多的不同屏幕宽度的设备被发布，您可能会发现这些媒体查询不会与你期望相关设备匹配。当你的主题工作时，可以调整这些媒体查询，以便它们定位宽度看起来不错。

设置桌面视图
============
我们将从桌面浏览器视图开始。 我们将使用layout-core.css来帮助我们设置我们的列。

动手——标准设置
----------------
现在，我们为桌面视图设置默认样式：
	1. 在媒体查询上面，增加如下代码：
	 .. literalinclude:: style3.css
		:language: css
	
	2. 保存你的样式；

我们在标准桌面屏幕上添加了我们的布局的样式。我们不需要检查
CSS所有的细节但需要注意一些要点，注意事项如下：

	- 我们的 ``#mainNav`` navigaton元素已经被绝对地定位了，所以它可以被提升到我们的布局的顶部；
	- 我们为我们 ``.thisMonth h2`` 添加了一些尺寸;
	- 我们的 ``#across`` div是为了更大的桌面一直延伸到全屏幕的宽度；
	- 我们为 ``.content`` 和 ``.sidebar`` divs添加了边界和补白，特别是 ``margin-top`` 将它们推下来（这是因为我们将在这里增加背景图片）；

动作——检查大屏幕桌面
----------------------
我们已经设置了标准的默认视图，但是我们也希望处理更大的桌面浏览器。我们添加一些CSS到我们的媒体查询，如果我们检测到较大的屏幕，以扩大#mainNav导航将元素与我们的 ``#container`` div匹配：
	1. 在第一个媒体查询中，增加如下代码：
	 .. code-block:: css

		@media (min-width: 1220px) {
			#mainNav{
				position:absolute;
				top: 110px;
				width: 1100px;
			}
		}
	
	2. 保存你的样式；

我们的layout-core.css样式表将div宽度设置为百分比，因此它们将扩展#container div设置的任何大小。它也将#container div设置为1100像素。我们的#mainNav nav现在将匹配，而不会在较大的屏幕延伸继续延伸#container div宽度。

动手——确保小点的屏幕被处理
----------------------------
当我们的layout-core.css文件在950像素的较小屏幕上捕捉 ``#container`` div时，我们还要 ``#mainNav`` 也匹配：
	1. 在接下来的媒体查询中，增加如下代码：
	 .. code-block:: css

		@media (max-width: 1024px) {
			/*for netbook/tablet screens*/
			#mainNav{
				position:absolute;
				top: 110px;
				width: 950px;
			}
		}

	2. 保存你的样式表；

设置平板电脑视图
================
我们现在可以专注于平板电脑和媒体播放器的观看。有很多设备出现在这个范围内。以下两个媒体查询有助于捕捉大多数这些设备。

动手——为平板电脑调整标准布局
------------------------------
我们将从480像素宽到800像素的设备开始。这个范围包括在水平方向举着时的iPad：
	1. 增加如下的媒体查询：
	 .. literalinclude:: style2.css
		:language: css
	
	2. 保存你的样式表；

我们添加了一些样式来调整平板设备上的布局。特别是：
	- 我们删除了我们#mainNav列表项目li的“选项卡”的浮动性，并将其设置为垂直列表；
	- 我们改变了我们的一些标题字体大小；
	- 我们隐藏了我们的文章内容，只显示了标题；
	- 我们关闭我们的.sidebar元素的右浮动；
	- 我们将.sidebar中的每个div设置为左浮动，创建一个我们的主要文章标题三叠箱；

设置小屏幕视图
==============
我们现在可以设置我们的小屏幕视图，这将针对智能手机和其他在纵向方向较小的设备。

动手——设置我们小屏幕布局
--------------------------
这里我们的媒体查询有点不同，仅仅应用到屏幕(其它的查询将会影响打印布局)。
	1. 在你最后的媒体查询中，增加如下CSS规则：
	 .. literalinclude:: style4.css
		:language: css

	2. 保存你的样式表；

我们添加了一些样式来改进小屏幕上的布局：

	- 我们缩短了我们的标题，并减小了 `#mainNav` 的宽度;
	- 我们减小了 `#mainNav` 标题中的字体大小；
	- 我们减少了 `.content` div的marigin-top;

最重要的事情实际上是在我们的layout-core中处理。
所有lef和right浮动都被关闭，两边被清除，所有百分比宽度
设置为100％。这使得我们的手机视图中的每个div都布置在边缘上。

.. seealso::

	我们将在设计中充分利用许多CSS3技术。特别是简单的梯度，圆角和盒子阴影。麻烦的是IE7和8不支持任何这些CSS3功能。

	不用担心，我们将使用一个名为CSS3PIE的精彩库为IE 7和8实现这些功能。

动手——建立我们的图形样式
--------------------------
现在我们需要在我们的样式表中设置一个构造，用于设计处理规则。

	1. 第一步是上传我们的图形文件。创建一个名为images的文件夹该文件夹包含您的其他文件。将您的图像上传到它。
	2. 在style.css中，在STANDARD STYLING系列下面，但在我们的媒体查询之上，为背景颜色添加我们的颜色方案：
	 .. literalinclude:: style5.css
		:language: css
		:lines: -30
	3. 下一步，增加渐变方案。你需要包含一些浏览器特有的前缀版本。
	 .. literalinclude:: style5.css
		:language: css
		:lines: 32-42
	4. 在此之外，添加一些处理边界的规则：
	 .. literalinclude:: style5.css
		:language: css
		:lines: 44-88
	5. 接下来，设置圆角。与渐变一样，我们已经省略browser-prefxed代码来节省空间，但是您可以在本章的代码中找到它。
	 .. literalinclude:: style5.css
		:language: css
		:lines: 90-109
	6. 最后，设置一些盒子阴影；
	 .. literalinclude:: style5.css
		:language: css
		:lines: 111-118
	7. 保存你的样式文件；

我们为边框，渐变，圆角和盒子阴影添加了样式。

增加图形和背景图片
==================
添加了所有CSS生成的样式后，我们需要考虑我们将要创建的任何图形使它不需要由CSS生成。

CSS3的优点在于它减少了对这些图形的需求，因为我们不再需要
为渐变，圆角或阴影创建背景图像。但有一些我们设计的CSS元素不能被处理。

我们已经有一些图像可以导入到我们的主题 - 你会在这本书的随书代码中发现他们的代码片段。

.. note::
	我们的主题广泛使用背景图片，以避免内嵌图像与我们的主题用户的任何可能会在将来增加其他内容相融合的任何问题。您可能更喜欢在标记中使用内联图像，它具有容易访问和SEO优势的，但缺点是如果您的主题的未来用户编辑模板，他或她可能会意外删除设计所需的图像。我们的图像只是设计而不是内容的一部分，所以我们使用的是背景图片。

设置背景图片
============
我们已经将我们的logo导出到一个图像。使用background-position属性我们将显示不同大小的logo取决于哪个屏幕尺寸触发我们的媒体查询。

.. note::
	Wellstyled有一个关于如何使用单一图像技术的优秀教程（也称为“CSS精灵”）使用CSS来处理图像背景翻转：http://wellstyled.com/css-nopreload-rollovers。

	您还可以查看CSS技巧，以及他们的CSS文章：它们是什么，为什么他们很酷，以及如何使用它们在http://css-tricks.com/CSS-sprites/。

动手——增加背景图片
--------------------
我们创建的图像需要作为背景图像添加到我们的样式表中。

	1. 在样式表中，编辑STANDARD STYLING 部分以添加背景图像和颜色，使用以下代码。最好的做法是为您已经设置的描述块加入每个声明。您可以在代码中看到最终的代码。
	 .. literalinclude:: style6.css
		:language: css
		:lines: -38
	2. 现在，在样式表的STANDARD STYLING部分，增加如下代码块：
	 .. literalinclude:: style6.css
		:language: css
		:lines: 40-68
	3. 保存你的style.css文件；

我们将CSS的背景和颜色添加到我们的样式表中。正如你所知道的，我们使用了大量不重复，以确保我们的背景图像不重复，并在我们的设计中使用背景图像定位。

现在让我们将这些背景所需的任何更改添加到我们的媒体查询中。

动手——增加背景图片样式到媒体查询中
------------------------------------
我们需要编辑两个最小屏幕尺寸的两个媒体查询。

	1. 在面向小型平板电脑和手机的媒体查询中， @media(min-width：480px)和(max-width：800px)- 添加以下代码。再次，你会发现你可以将它添加到你的存在的声明。
	 .. literalinclude:: style6.css
		:language: css
		:lines: 70-86
	2. 接下来，在针对小屏幕的媒体查询 - @媒体只有屏幕和(min-width: 320px)和(max-width: 480px) - 添加以下代码：
	 .. literalinclude:: style6.css
		:language: css
		:lines: 88-104
	3. 最后保存你的样式；

我们将图形加载到STANDARD STYLING规则中，然后转移到每个规则中媒体查询，修改高度，背景位置和其他视觉属性。最值得注意的是，我们更改了我们的标题高度，并使用CSS sprite技术，我们的logo加载了不同大小的logo作为我们的屏幕尺寸变化。

不要忘记favicon和touch icon
===========================
Favicons是位于网页浏览器地址栏中的URL旁边的那些16px * 16px的图标。它们也显示在标签上（如果您使用的是标签浏览器），在您的书签中，以及您的桌面上的快捷方式或Windows XP中的其他文件夹和Vista。

创建图标的最简单（最快速）的方式是使用您网站的徽标或关键图形
，并将其缩小到16px * 16像素; 然后保存为一个.ico文件。

动手——增加你创建的favicon
---------------------------
已经创建一个favicon，我们需要上传它到我们的主题。

	1. 一旦你拥有你的favicon.ico，请把它和index.html放置在一个目录下；
	2. 打开index.html，然后，增加如下代码到<head>部分：
	 .. code-block:: html

		<link rel="shortcut icon" href="favicon.ico" type="image/x-icon"/>

有一个去英雄 - 使你的favicon高分辨率
关于.ico格式的一个众所周知的事实是它可以包含多个不同的颜色深度的版本。这是您的操作系统能够正确的显示这些“平滑的图标”，如：保存为你的桌面的快捷方式。

Windows将显示一个图标的三个主要尺寸是：16 x 16,32 x 32和48 x 48。有时候favicon可以一路攀升到128 x 128。这取决于你;只要记住，越高的解析度，颜色深度和透明度，你的图标越大越好，加载时间会更长。

您将基本上使用前面列出的相同步骤创建您的图标，只需生成48 px x 48 px，然后保存（以便不覆盖您的原始飞行）到32 x 32，最后16 x 16。它将以PNG格式保存每个图标，特别是如果您想要的背景要透明。

Touch icons
===========
由于我们只是生成一个多分辨率的favicon的图标，我们也可以添加一个漂亮的触摸图标。iOS和Android设备使用触摸图标需要高于2.1.0版本。虽然你可以在技术上创建一个更高的分辨率图像（例如，114 x 114）其他设备会将其缩小，但如果不需要，加载更大的图像干什么，为什么要浪费带宽？创建三个所需尺寸比较好。

动手——增加一个触摸图标
------------------------
一旦你有一个触摸图标（你应该保存为.png），你会需要添加到您的主题。

	1. 将您的触摸图标上传到与index.html文件相同的文件夹。
	2. 在index.html中，在<head>部分添加以下代码：
	 .. code-block:: html
		<link rel="apple-touch-icon" sizes="57x57" href="/apple-touchicon-57x57.png"/>
		<link rel="apple-touch-icon" sizes="72x72" href="/apple-touchicon-72x72.png"/>
		<link rel="apple-touch-icon" sizes="114x114" href="/apple-touchicon-114x114.png"/>

	3. 保存你的index.html文件；