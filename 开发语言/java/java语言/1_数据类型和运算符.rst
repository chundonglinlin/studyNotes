***************
数据类型和运算符
***************

``Java`` 语言是一门强类型的语言，所有的变量必须先声明、后使用，从而保证程序更加健壮，可以在编译过程中发现源代码的错误。为此，Java语言提供了丰富的基本数据类型，例如整型、字符型、浮点型和布尔型等。基本类型大致上可以分为2类：数值类型和布尔类型，其中数值类型可包括整型、字符型和浮点型，所有数值类型之间可以进行类型转换，这种类型转换包括自动类型和强制类型转换。

``Java`` 语言还提供了一系列功能丰富的运算符，这些运算符包括所有算术运算符，还包含功能丰富的位运算符、比较运算符、逻辑运算符，这些运算符是 ``Java`` 编程的基础。将运算符和操作数连接在一起就形成了表达式。

注释
====
我们在编写程序时，总需要为程序添加一些注释，用以说明某段代码的作用，或者说明某个类的用途，某个方法的功能，以及该方法的参数和返回值的数据类型和意义等。

程序注释的作用非常大，笔者有很多学生在开始学习 ``Java`` 语言时，会很努力写程序，但不大会注意添加注释，他们认为添加注释是一件浪费时间，而且没有意义的事情。经过一段时间的学习，他们写出了一些不错的小程序，如一些游戏、工具软件等。再经过一段时间的学习，他们开始意识到当初写的程序在结构上有很多不足，需要重构。于是他们打开源代码，以为可以很轻松地改写原有的代码，但这时他们发现理解原来写的代码非常困难，很难理解原有的编程思路。

为什么要添加程序注释？至少有如下三方面的考虑：

- 永远不要过于相信自己的理解力！当你思路通畅时，进入编程境界时，你可以很流畅地实现某个功能，但这种流畅可能是因为你当时正处于这种开发思路中。为了能在再次阅读这段代码时，还能找回当初编写这段代码的思路，建议添加注释！
- 可读性第一，效率第二！在那些“古老”的岁月里，编程是少数人的专利j他们随心所欲地写程序，他们以追逐程序执行效率为目的。但随着软件行业的发展，人们发现仅有少数技术 ``Hacker`` 编程满足不了日益增长的软件需求，越来越多的人加入了编程队伍，并引入了工程化的方式来管理软件开发。这个时候，软件开发成为一种团队协同作战，团队成员的沟通变得很重要，因此，一个人写的代码，需要被整个团队的其他人所理解；而且，随着硬件设备飞速发展，程序的执行效率不再是第一考虑的要素，程序的可读性变成了第一考虑的要素。
- 代码即文档！很多刚刚学完学校软件工程课程的学生会以为：文档就是 ``Word`` 文档！实际上，程序源代码是程序文档的重要组成部分，当我们想着把各种软件相关文档写规范的时候，不要忘了把软件里最重要的文档：源代码写规范！

程序注释是源代码的一个重要部分，对于一份规范的程序源代码而言，注释应该占到源代码的 1/3 以上。几乎所有的编程语言都提供了添加注释的方法，一般的编程语言都提供了基本的单行注释和多行注释语言， ``Java`` 语言也不例外，除此之外， ``Java`` 语言还提供了一种文档注释。 ``Java`` 语言的注释一共有三种类型：

- 单行注释；
- 多行注释；
- 文档注释；

单行注释和多行注释
-----------------
单行注释就是在程序中注释一行代码，在 ``Java`` 语言中，将双斜线(//)放在需要注释的内容之前，就可以了；多行注释是指一次性地将程序中多行代码注释掉，在 ``Java`` 语言中，使用 ``/*`` 和 ``*/`` 将程序中需要注释的内容包含起来， ``/*`` 表示注释开始，而 ``*/`` 表示注释结束。

下面代码中增加了单行注释和多行注释：

程序清单：codes\\03\\3-1\\CommentTest.java

.. code-block:: java

	public class CommentTest {
	    /*这里面的内容全部是多行注释Java语言真的很有趣，*/
	    public static void main(String[] args) {
	        System.out.println("Hello World!");//这是一行简单的注释
	        //System.out.println("这行代码被注释了，将不会被编译、执行!");
	    }
	}

除此之外，添加注释也是调试程序的一个重要方法：如果我们觉得某段代码可能有问题，可以先把这段代码注释起来，让编译器忽略这段代码，再次编译、运行这个程序，如果可以正常编译、运行，则可以说明错误就是由这段代码引起的，这样就缩小了错误所在的范围，有利于排错；如果依然出现相同的错误，则可以说明这个错误不是由这段代码引起的，同样也缩小了错误所在的范围。

文档注释
--------




标识符和关键字
=============



分隔符
------



标识符规则
----------



Java关键字
----------

数据类型分类
============



基本数据类型
===========


整型
----


字符型
------


浮点型
------



布尔型
------


void
----


基本类型的类型转换
=================


自动类型转换
-----------


强制类型转化
-----------


表达式类型的自动提升
------------------


直接量
======

直接量的类型
-----------


直接量的赋值
-----------


运算符
======


算术运算符
---------


赋值运算符
---------


位运算符
-------

扩展后的赋值运算符
----------------

比较运算符
---------


逻辑运算符
---------


三目运算符
---------


运算符的结合性和优先级
--------------------



